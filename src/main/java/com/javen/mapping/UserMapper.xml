<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javen.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.javen.model.User">
  <!-- column=数据库变量名，property=entity类的变量名 -->
    <id column="uId" jdbcType="INTEGER" property="uId" />
    <result column="uNo" jdbcType="VARCHAR" property="uNo"/>   
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="uType" jdbcType="INTEGER" property="uType" />
  </resultMap>
  <sql id="Base_Column_List">
    uId, uNo, userName, password, uType
  </sql>
  <select id="getUserByUno" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where uNo = #{uNo,jdbcType=VARCHAR}
  </select>
  <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where uId = #{uId,jdbcType=INTEGER}
  </select>
  <select id="getUserByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--  
    select 
    <include refid="Base_Column_List" />
    from t_user
    where username = #{username,jdbcType=VARCHAR}
    -->
    SELECT * FROM t_user
		WHERE userName LIKE #{UserName}
  </select>
  <select id="getUserAll" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from t_user
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where uId = #{uId,jdbcType=INTEGER}
  </delete>
  
  <!-- 分页获取数据 -->
	<select id="getUserByPage" parameterType="com.javen.model.Page" resultType="com.javen.model.User">
		select * from t_user
		order by uId asc
		limit #{startIndex},#{pageSize};
	</select>
  <!-- 查询用户的总数量 -->
  <select id="getTotalDataCount" resultType="int">
		select count(1) from t_user;
	</select>
 <!--
  <insert id="insert" parameterType="com.javen.model.User" useGeneratedKeys="true" keyProperty="id">
     使用时会自动插入id且置为主键 
	<selectKey keyProperty="id" resultType="int" order="AFTER">
		SELECT LAST_INSERT_ID()
	</selectKey>
	 插入用户时可自动的插入对应一个特殊字段uuid，使用时需要在表中加入一个uuid字段
	<selectKey keyProperty="uuid" resultType="string" order="BEFORE">
		SELECT UUID()	
	</selectKey>
		INSERT INTO `t_user` (`username`,`password`,`uType`,`address`)
		VALUES (#{username},#{password},#{uType});
	</insert>
 -->
  <insert id="insert" parameterType="com.javen.model.User" >
    <selectKey keyProperty="uId" resultType="int" order="AFTER">
		SELECT LAST_INSERT_ID()
	</selectKey>
    insert into t_user (uId, uNo, userName, password, uType)
    values (#{uId,jdbcType=INTEGER}, #{uNo,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{uType,jdbcType=INTEGER})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.javen.model.User" >
    update t_user
    set uNo = #{uNo,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      uType = #{uType,jdbcType=INTEGER}
    where uId = #{uId,jdbcType=INTEGER}
  </update>
</mapper>